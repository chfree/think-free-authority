insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '0b89273b-3342-43c7-892a-1a14d0263a5f', '104-DaoImpl', null, '\nbuildSuccess(createDaoImplCode(context))\n\nfunction createDaoImplCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = []\n  result.push(\'package \' + packageName + \'.dao.impl;\\r\\n\')\n  result.push(\'import com.tennetcn.free.data.dao.base.ISqlExpression;\')\n  result.push(\'import com.tennetcn.free.core.message.data.PagerModel;\')\n  result.push(\'import com.tennetcn.free.data.utils.SqlExpressionFactory;\')\n  result.push(\'import org.springframework.stereotype.Component;\')\n  result.push(\'import com.tennetcn.free.data.dao.base.impl.SuperDao;\')\n  result.push(\'import \' + packageName + \'.dao.I\' + entityName + \'Dao;\')\n  result.push(\'import \' + packageName + \'.model.\' + entityName + \';\')\n  result.push(\'import \' + packageName + \'.viewmodel.\' + entityName + \'Search;\')\n  result.push(\'import java.util.List;\\r\\n\')\n  result.push(context.appendAuthor(displayName))\n  result.push(\'\\r\\n@Component\')\n  result.push(\'public class \' + entityName + \'DaoImpl extends SuperDao<\' + entityName + \'> implements I\' + entityName + \'Dao{\')\n  result.push(\'\\t@Override\')\n  result.push(\'\\tpublic int queryCountBySearch(\' + entityName + \'Search search) {\')\n  result.push(\'\\t\\tISqlExpression sqlExpression = SqlExpressionFactory.createExpression();\')\n  result.push(\'\\t\\tsqlExpression.selectCount().from(\' + entityName + \'.class);\\r\\n\')\n  result.push(\'\\t\\tappendExpression(sqlExpression,search);\\r\\n\')\n  result.push(\'\\t\\treturn queryCount(sqlExpression);\')\n  result.push(\'\\t}\\r\\n\')\n  result.push(\'\\t@Override\')\n  result.push(\'\\tpublic List<\' + entityName + \'> queryListBySearch(\' + entityName + \'Search search, PagerModel pagerModel) {\')\n  result.push(\'\\t\\tISqlExpression sqlExpression = SqlExpressionFactory.createExpression();\')\n  result.push(\'\\t\\tsqlExpression.selectAllFrom(\' + entityName + \'.class);\\r\\n\')\n  result.push(\'\\t\\tappendExpression(sqlExpression,search);\\r\\n\')\n  result.push(\'\\t\\treturn queryList(sqlExpression,pagerModel);\')\n  result.push(\'\\t}\\r\\n\')\n  result.push(\'\\tprivate void appendExpression(ISqlExpression sqlExpression, \' + entityName + \'Search search){\')\n  context.dictColumns.forEach((item, index) => {\n    result.push(\'\\t\\tsqlExpression.andEqNoEmpty(\"\' + item.columnName + \'\",search.get\' + context.toPascal(item.propertyName) + \'());\\r\\n\')\n    if (item.isKey === \'1\') {\n      result.push(\'\\t\\tsqlExpression.andNotEqNoEmpty(\"\' + item.columnName + \'\",search.getNot\' + context.toPascal(item.propertyName) + \'());\\r\\n\')\n    }\n  })\n  result.push(\'\\t}\')\n  result.push(\'}\')\n\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '195baa88-4b1a-4959-a38e-508c108cd117', '119-RuleVue', null, '\nbuildSuccess(createRuleVueCode(context))\n\nfunction createRuleVueCode(context) {\n  const entityName = context.dictTable.entityName\n  const createRuleVueCode =\n  \'import { validByteLength } from \\\'@/components/util/valid\\\'\\r\\n\' +\n  \'import \' + context.toCamel(entityName) + \'Service from \\\'@/api/xxxx/\' + context.toCamel(entityName) + \'\\\'\\r\\n\\r\\n\' +\n  \'const validNameUnique = function(rule, value, callback) {\\r\\n\' +\n  \'  const \' + context.toCamel(entityName) + \'Model = rule.component.\' + context.toCamel(entityName) + \'Model\\r\\n\' +\n  \'  var checkData = { notId: \' + context.toCamel(entityName) + \'Model.id, name: value }\\r\\n\\r\\n\' +\n  \'  \' + context.toCamel(entityName) + \'Service.countSearch(checkData).then(result => {\\r\\n\' +\n  \'    result.count >= 1 ? callback(new Error(rule.message)) : callback()\\r\\n\' +\n  \'  })\\r\\n\' +\n  \'}\\r\\n\' +\n  \'export default {\\r\\n\' +\n  \'  data() {\\r\\n\' +\n  \'    return {\\r\\n\' +\n  \'      rules: {\\r\\n\' +\n  \'        name: [\\r\\n\' +\n  \'          { required: true, message: \\\'ÂêçÁß∞‰∏çËÉΩ‰∏∫Á©∫\\\', trigger: \\\'blur\\\' },\\r\\n\' +\n  \'          { validator: validByteLength, max: 50, message: \\\'Âè™ËÉΩËæìÂÖ•50‰∏™Â≠óÁ¨¶(1Ê±âÂ≠ó=3Â≠óÁ¨¶)\\\', trigger: \\\'blur\\\' },\\r\\n\' +\n  \'          { validator: validNameUnique, component: this, message: \\\'Â∑≤ÁªèÂ≠òÂú®Áõ∏ÂêåÁöÑÂêçÁß∞\\\', trigger: \\\'blur\\\' }\\r\\n\' +\n  \'        ]\\r\\n\' +\n  \'      }\\r\\n\' +\n  \'    }\\r\\n\' +\n  \'  }\\r\\n\' +\n  \'}\\r\\n\'\n  return createRuleVueCode\n}\n\n', '02', 'js', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '1eb3ee3b-1dd9-4d3c-99f6-d1b517bf0b33', '113-ListReq', null, '\nbuildSuccess(createListReqCode(context))\n\nfunction createListReqCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = []\n  result.push(\'package com.tennetcn.xxxx.web.apimodel.\' + entityName.toLowerCase() + \';\\r\\n\')\n  result.push(\'import \' + packageName + \'.viewmodel.\' + entityName + \'Search;\')\n  result.push(\'import com.tennetcn.free.core.message.web.BasePagerReq;\')\n  result.push(\'import lombok.Data;\')\n  result.push(context.appendAuthor(displayName))\n  result.push(\'\\r\\n@Data\')\n  result.push(\'public class \' + entityName + \'ListReq extends BasePagerReq {\')\n  result.push(\'\\tprivate \' + entityName + \'Search search;\')\n  result.push(\'}\')\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}\n\n', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '2bb53ab7-657d-4e1c-bfbe-6753e7b14177', '120-DetailedVue', null, ' context.$prompt(\'ËæìÂÖ•ÂàóÊï∞(1/2/3/4/6)\', \'ÊèêÁ§∫\', {inputValue: 2, closeOnClickModal: false}).then(result=>{\n    if (result.action === \'confirm\') {\n      if (result.value.length > 1 || \'12346\'.indexOf(result.value) < 0) {\n        context.$message.warning(\'Âè™ËÉΩËæìÂÖ•1/2/3/4/6\')\n        return\n      }\n      buildSuccess(createDetailedVueCode(context, result.value))\n    }\n\n  })\nfunction   createDetailedVueCode(context,columnCount){\n  const entityName = context.toCamel(context.dictTable.entityName)\n  const resultDetailedVueCode =\n  \'<template>\\r\\n\' +\n  \'  <div>\\r\\n\' +\n  \'    <tc-form :ref=\"layout.formName\" :model=\"\' + entityName + \'Model\" :rules=\"rules\" :disabled=\"model.openMode===\\\'select\\\'\" size=\"small\" label-width=\"80px\">\\r\\n\' +\n  \'      <div style=\"padding:10px;\">\\r\\n\' +\n  createColumnRow(context, columnCount) +\n  \'      </div>\\r\\n\' +\n  \'      <tc-fixed-bottom style=\"text-align:center;line-height:30px;\">\\r\\n\' +\n  \'        <tc-button type=\"think\" size=\"small\" @click=\"saveForm\">‰øùÂ≠ò</tc-button>\\r\\n\' +\n  \'        <tc-button v-if=\"model.openMode===\\\'add\\\'\" type=\"think\" size=\"small\" @click=\"resetForm\">ÈáçÁΩÆ</tc-button>\\r\\n\' +\n  \'        <tc-button type=\"think\" size=\"small\" forceEnabled @click=\"$parent.hide\">ÂÖ≥Èó≠</tc-button>\\r\\n\' +\n  \'      </tc-fixed-bottom>\\r\\n\' +\n  \'    </tc-form>\\r\\n\' +\n  \'  </div>\\r\\n\' +\n  \'</template>\\r\\n\\r\\n\' +\n  \'<script>\\r\\n\' +\n  \'import \' + entityName + \'ModelMix from \\\'./assist/\' + entityName + \'.model\\\'\\r\\n\' +\n  \'import \' + entityName + \'RuleMix from \\\'./assist/\' + entityName + \'.rule\\\'\\r\\n\' +\n  \'import \' + entityName + \'Service from \\\'@/api/xxxx/\' + context.toCamel(entityName) + \'\\\'\\r\\n\\r\\n\' +\n  \'export default {\\r\\n\' +\n  \'  mixins: [\' + entityName + \'ModelMix, \' + entityName + \'RuleMix],\\r\\n\' +\n  \'  props: {\\r\\n\' +\n  \'    model: { type: Object, default: null }\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  data() {\\r\\n\' +\n  \'    return {\\r\\n\' +\n  \'      layout: {\\r\\n\' +\n  \'        formName: \\\'form\\\',\\r\\n\' +\n  \'        gutter: 20\\r\\n\' +\n  \'      }\\r\\n\' +\n  \'    }\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  created() {\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  watch: {\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  methods: {\\r\\n\' +\n  \'    opened() {\\r\\n\' +\n  \'      this.\' + entityName + \'Model = Object.assign(this.\' + entityName + \'Model, this.model)\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    closed() {\\r\\n\' +\n  \'      this.resetForm()\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    resetForm() {\\r\\n\' +\n  \'      this.$refs[this.layout.formName].resetFields()\\r\\n\' +\n  \'      this.resetModel()\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    saveForm() {\\r\\n\' +\n  \'      this.$refs[this.layout.formName].validate((valid) => {\\r\\n\' +\n  \'        if (!valid) { return }\\r\\n\' +\n  \'        \' + entityName + \'Service.save(this.\' + entityName + \'Model).then(response => {\\r\\n\' +\n  \'          if (response.ok && response.result) {\\r\\n\' +\n  \'            this.$emit(\\\'saveSuccess\\\')\\r\\n\' +\n  \'            this.$parent.hide()\\r\\n\' +\n  \'          }\\r\\n\' +\n  \'        })\\r\\n\' +\n  \'      })\\r\\n\' +\n  \'    }\\r\\n\' +\n  \'  }\\r\\n\' +\n  \'}\\r\\n\' +\n  \'</script>\\r\\n\\r\\n\' +\n  \'<style lang=\"scss\">\\r\\n\\r\\n\' +\n  \'</style>\\r\\n\'\n\n  return resultDetailedVueCode\n}\n\nfunction createColumnRow(context, columnCount) {\n  const span = 24 / columnCount\n  const entityName = context.toCamel(context.dictTable.entityName)\n  let cols = []\n  cols.push(\'        <el-row :gutter=\"layout.gutter\">\\r\\n\')\n  context.dictColumns.forEach((item, index) => {\n    cols.push(\'          <el-col :span=\"\' + span + \'\">\\r\\n\' +\n    \'            <el-form-item label=\"\' + item.displayName + \'\" prop=\"\' + item.propertyName + \'\">\\r\\n\' +\n    \'              <tc-input v-model=\"\' + entityName + \'Model.\' + item.propertyName + \'\" />\\r\\n\' +\n    \'            </el-form-item>\\r\\n\' +\n    \'          </el-col>\\r\\n\')\n    if ((index + 1) % columnCount === 0) {\n      cols.push(\'        </el-row>\\r\\n\')\n      cols.push(\'        <el-row :gutter=\"layout.gutter\">\\r\\n\')\n\n    }\n  })\n  cols.push(\'        </el-row>\\r\\n\')\n  return cols.join(\'\')\n}', '02', 'html', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '2d6d4b3c-47ca-4c24-8243-5bddaa310f1e', '103-Dao', null, '\nbuildSuccess(createDaoCode(context))\n\nfunction createDaoCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = []\n  result.push(\'package \' + packageName + \'.dao;\\r\\n\')\n  result.push(\'import com.tennetcn.free.data.dao.base.ISuperDao;\')\n  result.push(\'import com.tennetcn.free.core.message.data.PagerModel;\')\n  result.push(\'import \' + packageName + \'.viewmodel.\' + entityName + \'Search;\')\n  result.push(\'import \' + packageName + \'.model.\' + entityName + \';\')\n  result.push(\'import java.util.List;\\r\\n\')\n  result.push(context.appendAuthor(displayName))\n  result.push(\'\\r\\npublic interface I\' + entityName + \'Dao extends ISuperDao<\' + entityName + \'>{\')\n  result.push(\'\\tint queryCountBySearch(\' + entityName + \'Search search);\\r\\n\')\n  result.push(\'\\tList<\' + entityName + \'> queryListBySearch(\' + entityName + \'Search search, PagerModel pagerModel);\')\n  result.push(\'}\')\n\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}\n', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '2e758d05-25f1-4289-a0ec-5b0fd53a4583', '107-Mapper', null, '\nbuildSuccess(createCode(context))\n\nfunction createCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = \'package \' + packageName + \'.mapper;\\r\\n\'\n  result += \'\\r\\nimport org.apache.ibatis.annotations.Mapper;\'\n  result += \'\\r\\nimport com.tennetcn.free.data.dao.base.IMapper;\'\n  result += \'\\r\\nimport \' + packageName + \'.model.\' + entityName + \';\\r\\n\\r\\n\'\n\n  result += context.appendAuthor(displayName)\n\n  result += \'\\r\\n\\r\\n@Mapper\'\n  result += \'\\r\\npublic interface I\' + entityName + \'Mapper extends IMapper<\' + entityName + \'>{\'\n  result += \'\\r\\n\\r\\n}\'\n\n  result = result.replace(/\\t/g, \'    \')\n\n  return result\n}', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '2f84efab-84cf-4361-a23d-dd0805ca9ed8', '118-ModelVue', null, '\nbuildSuccess(createModelVueCode(context))\n\nfunction createModelVueCode(context) {\n  const entityName = context.dictTable.entityName\n  const createModelVueCode =\n  \'export default {\\r\\n\' +\n  \'  data() {\\r\\n\' +\n  \'    return {\\r\\n\' +\n  \'      emptyModel: {},\\r\\n\' +\n  \'      \' + context.toCamel(entityName) + \'Model: {\\r\\n\' +\n  createColumns(context) +\n  \'      }\\r\\n\' +\n  \'    }\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  watch: {\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  created() {\\r\\n\' +\n  \'    this.emptyModel = Object.assign({}, this.\' + context.toCamel(entityName) + \'Model)\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  methods: {\\r\\n\' +\n  \'    resetModel() {\\r\\n\' +\n  \'      this.\' + context.toCamel(entityName) + \'Model = Object.assign({}, this.emptyModel)\\r\\n\' +\n  \'    }\\r\\n\' +\n  \'  }\\r\\n\' +\n  \'}\\r\\n\'\n\n  return createModelVueCode\n}\n\nfunction createColumns(context) {\n  var columnsArr = []\n\n  context.dictColumns.forEach((item, index) => {\n    columnsArr.push(\'        \' + item.propertyName + \': null\')\n  })\n  return columnsArr.join(\',\\r\\n\') + \'\\r\\n\'\n}\n\n', '02', 'js', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '3294ec2c-dc64-482f-80fc-145afa95ded9', '114-ListResp', null, '\nbuildSuccess(createListRespCode(context))\n\nfunction createListRespCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = []\n  result.push(\'package com.tennetcn.xxxx.web.apimodel.\' + entityName.toLowerCase() + \';\\r\\n\')\n  result.push(\'import \' + packageName + \'.model.\' + entityName + \';\')\n  result.push(\'import com.tennetcn.free.core.message.web.BasePagerResp;\')\n  result.push(\'import lombok.Data;\')\n  result.push(\'import java.util.List;\')\n  result.push(context.appendAuthor(displayName))\n  result.push(\'\\r\\n@Data\')\n  result.push(\'public class \' + entityName + \'ListResp extends BasePagerResp {\')\n  result.push(\'\\tprivate List<\' + entityName + \'> \' + context.toCamel(entityName) + \'s;\')\n  result.push(\'}\')\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}\n\n', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '56297969-d58b-4492-9143-d0083f654ffc', '102-ModelView', '', '\nbuildSuccess(createViewModel(context))\n\nfunction createViewModel(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = \'package \' + packageName + \'.viewmodel;\\r\\n\'\n  if (context.dictColumns.some(item => item.dataType.indexOf(\'date\') >= 0)) {\n    result += \'\\r\\nimport java.util.Date;\'\n  }\n\n  result += \'\\r\\nimport lombok.Data;\\r\\n\'\n\n  result += context.appendAuthor(displayName)\n\n  result += \'\\r\\n\\r\\n@Data\'\n  result += \'\\r\\npublic class \' + entityName + \'Search{\'\n\n  var modelField = \'\'\n  var modelProperty = \'\'\n\n  context.dictColumns.forEach((item, index) => {\n    var dictColumn = item\n\n    modelField += \'\\r\\n\\t/**\'\n    modelField += \'\\r\\n\\t * \' + dictColumn.displayName\n    modelField += \'\\r\\n\\t */\'\n    modelField += \'\\r\\n\\tprivate \' + context.convert2Java(dictColumn.dataType) + \' \' + dictColumn.propertyName + \';\\r\\n\'\n\n    if (dictColumn.isKey === \'1\') {\n      modelField += \'\\r\\n\\t/**\'\n      modelField += \'\\r\\n\\t * not-\' + dictColumn.propertyName\n      modelField += \'\\r\\n\\t */\'\n      modelField += \'\\r\\n\\tprivate \' + context.convert2Java(dictColumn.dataType) + \' not\' + context.toPascal(dictColumn.propertyName) + \';\\r\\n\'\n    }\n  })\n\n  result += modelField\n  result += modelProperty\n\n  result += \'\\r\\n}\'\n\n  result = result.replace(/\\t/g, \'    \')\n\n  return result\n}', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '6907869b-82ba-45d9-90b2-6bf053cdeef3', '116-IndexVue', null, '\nbuildSuccess(createIndexVueCode(context))\n\nfunction createIndexVueCode(context) {\n  const entityName = context.dictTable.entityName\n  const indexVueTemplate =\n  \'<template>\\r\\n\' +\n  \'  <div>\\r\\n\' +\n  \'    <tc-block title=\"ÊêúÁ¥¢\" style=\"margin-bottom:5px;\">\\r\\n\' +\n  \'      <tc-form size=\"small\" label-width=\"100px\">\\r\\n\' +\n  \'        <el-row>\\r\\n\' +\n  \'          <el-col :span=\"8\">\\r\\n\' +\n  \'            <tc-form-item label=\"ÂêçÁß∞1\">\\r\\n\' +\n  \'              <tc-input v-model=\"searchForm.name1\" clearable />\\r\\n\' +\n  \'            </tc-form-item>\\r\\n\' +\n  \'          </el-col>\\r\\n\' +\n  \'          <el-col :span=\"8\">\\r\\n\' +\n  \'            <tc-form-item label=\"ÂêçÁß∞2\">\\r\\n\' +\n  \'              <tc-input v-model=\"searchForm.name2\" clearable />\\r\\n\' +\n  \'            </tc-form-item>\\r\\n\' +\n  \'          </el-col>\\r\\n\' +\n  \'        </el-row>\\r\\n\' +\n  \'        <el-row>\\r\\n\' +\n  \'          <el-col :span=\"24\" style=\"text-align:center\">\\r\\n\' +\n  \'            <tc-button type=\"think\" size=\"small\" icon=\"el-icon-search\" @click=\"search\">Êü•ËØ¢</tc-button>\\r\\n\' +\n  \'            <tc-button type=\"think\" size=\"small\" icon=\"el-icon-search\" @click=\"resetSearch\">ÈáçÁΩÆ</tc-button>\\r\\n\' +\n  \'          </el-col>\\r\\n\' +\n  \'        </el-row>\\r\\n\' +\n  \'      </tc-form>\\r\\n\' +\n  \'    </tc-block>\\r\\n\' +\n  \'    <tc-block>\\r\\n\' +\n  \'      <div style=\"margin-bottom:10px;\">\\r\\n\' +\n  \'        <tc-button-group>\\r\\n\' +\n  \'          <tc-button type=\"think\" v-btnc=\"\\\'\\\'\" size=\"small\" icon=\"el-icon-plus\" @click=\"addData\">Êñ∞Â¢û</tc-button>\\r\\n\' +\n  \'          <tc-button type=\"think\" v-btnc=\"\\\'\\\'\" size=\"small\" icon=\"el-icon-edit-outline\" @click=\"editData\">ÁºñËæë</tc-button>\\r\\n\' +\n  \'          <tc-button type=\"think\" v-btnc=\"\\\'\\\'\" size=\"small\" icon=\"el-icon-view\" @click=\"selData\">Êü•Áúã</tc-button>\\r\\n\' +\n  \'          <tc-button type=\"think\" v-btnc=\"\\\'\\\'\" size=\"small\" icon=\"el-icon-minus\" @click=\"delData\">Âà†Èô§</tc-button>\\r\\n\' +\n  \'        </tc-button-group>\\r\\n\' +\n  \'      </div>\\r\\n\' +\n  \'      <tc-table ref=\"\' + context.toCamel(entityName) + \'Table\" :data=\"data.list\" :columns=\"columns\" />\\r\\n\' +\n  \'      <tc-pager :pager=\"pager\" @pagerChange=\"pagerChange\" />\\r\\n\' +\n  \'    </tc-block>\\r\\n\' +\n  \'    <div>\\r\\n\' +\n  \'      <tc-dialog loading :title=\"detailedForm.title\" :visible.sync=\"detailedForm.show\" width=\"680px\" height=\"400px\">\\r\\n\' +\n  \'        <detailed :model=\"detailedForm.model\" @saveSuccess=\"saveSuccess\" />\\r\\n\' +\n  \'      </tc-dialog>\\r\\n\' +\n  \'    </div>\\r\\n\' +\n  \'  </div>\\r\\n\' +\n  \'</template>\\r\\n\'\n\n  const scriptTemplate =\n  \'<script>\\r\\n\' +\n  \'import \' + context.toCamel(entityName) + \'Service from \\\'@/api/xxxx/\' + context.toCamel(entityName) + \'\\\'\\r\\n\' +\n  \'import pagerMixin from \\\'@/components/mixins/pager.mixin.js\\\'\\r\\n\' +\n  \'import detailedMixin from \\\'@/components/mixins/detailed.mixin.js\\\'\\r\\n\' +\n  \'import detailed from \\\'./detailed\\\'\\r\\n\' +\n  \'export default {\\r\\n\' +\n  \'  mixins: [pagerMixin, detailedMixin],\\r\\n\' +\n  \'  components: {detailed},\\r\\n\' +\n  \'  data() {\\r\\n\' +\n  \'    return {\\r\\n\' +\n  \'      \' + createColumns(context) + \',\\r\\n\' +\n  \'      data: {\\r\\n\' +\n  \'        list: []\\r\\n\' +\n  \'      },\\r\\n\' +\n  \'      emptySearchForm: {},\\r\\n\' +\n  \'      searchForm: {\\r\\n\' +\n  \'        name1: null,\\r\\n\' +\n  \'        name2: null\\r\\n\' +\n  \'      }\\r\\n\' +\n  \'    }\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  created() {\\r\\n\' +\n  \'    this.$root.getParamOptions(\\\'name\\\')\\r\\n\' +\n  \'    this.emptySearchForm = Object.assign({}, this.searchForm)\\r\\n\' +\n  \'    this.loadData()\\r\\n\' +\n  \'  },\\r\\n\' +\n  \'  methods: {\\r\\n\' +\n  \'    saveSuccess() {\\r\\n\' +\n  \'      this.search()\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    search() {\\r\\n\' +\n  \'      this.pager.pageIndex = 1\\r\\n\' +\n  \'      this.loadData()\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    resetSearch() {\\r\\n\' +\n  \'      this.searchForm = Object.assign({}, this.emptySearchForm)\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    addData() {\\r\\n\' +\n  \'      this.detailedForm.model = {openMode: \\\'add\\\'}\\r\\n\' +\n  \'      this.detailedForm.show = true\\r\\n\' +\n  \'      this.detailedForm.title = \\\'ËØ¶ÊÉÖ-Êñ∞Â¢û\\\'\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    editData() {\\r\\n\' +\n  \'      const currentRow = this.$refs.\' + context.toCamel(entityName) + \'Table.getCurrentRow()\\r\\n\' +\n  \'      if (this.$tcUtil.isEmpty(currentRow)) {\\r\\n\' +\n  \'        this.$message.warning(\\\'ËØ∑ÈÄâÊã©‰∏Ä‰∏™Êï∞ÊçÆ\\\')\\r\\n\' +\n  \'        return\\r\\n\' +\n  \'      }\\r\\n\' +\n  \'      \' + context.toCamel(entityName) + \'Service.get(currentRow.id).then(resp => {\\r\\n\' +\n  \'        this.detailedForm.show = true\\r\\n\' +\n  \'        this.detailedForm.title = \\\'ËØ¶ÊÉÖ-ÁºñËæë\\\'\\r\\n\' +\n  \'        this.detailedForm.model = resp.\' + context.toCamel(entityName) + \'\\r\\n\' +\n  \'      })\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    selData() {\\r\\n\' +\n  \'      const currentRow = this.$refs.\' + context.toCamel(entityName) + \'Table.getCurrentRow()\\r\\n\' +\n  \'      if (this.$tcUtil.isEmpty(currentRow)) {\\r\\n\' +\n  \'        this.$message.warning(\\\'ËØ∑ÈÄâÊã©‰∏Ä‰∏™Êï∞ÊçÆ\\\')\\r\\n\' +\n  \'        return\\r\\n\' +\n  \'      }\\r\\n\' +\n  \'      \' + context.toCamel(entityName) + \'Service.get(currentRow.id).then(resp => {\\r\\n\' +\n  \'        this.detailedForm.show = true\\r\\n\' +\n  \'        this.detailedForm.title = \\\'ËØ¶ÊÉÖ-Êü•Áúã\\\'\\r\\n\' +\n  \'        this.detailedForm.model = Object.assign({openMode: \\\'select\\\'}, resp.\' + context.toCamel(entityName) + \')\\r\\n\' +\n  \'      })\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    delData() {\\r\\n\' +\n  \'      const currentRow = this.$refs.\' + context.toCamel(entityName) + \'Table.getCurrentRow()\\r\\n\' +\n  \'      if (this.$tcUtil.isEmpty(currentRow)) {\\r\\n\' +\n  \'        this.$message.warning(\\\'ËØ∑ÈÄâÊã©‰∏Ä‰∏™Êï∞ÊçÆ\\\')\\r\\n\' +\n  \'        return\\r\\n\' +\n  \'      }\\r\\n\' +\n  \'      this.$confirm.warning(\\\'ÊòØÂê¶Á°ÆËÆ§Âà†Èô§\\\').then(()=>{\\r\\n\' +\n  \'        \' + context.toCamel(entityName) + \'Service.delete(currentRow.id).then(resp => {\\r\\n\' +\n  \'          if (resp.ok && resp.result) {\\r\\n\' +\n  \'            this.$message.success(\\\'Âà†Èô§ÊàêÂäü\\\')\\r\\n\' +\n  \'            this.search()\\r\\n\' +\n  \'          }\\r\\n\' +\n  \'        })\\r\\n\' +\n  \'      })\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    loadData() {\\r\\n\' +\n  \'      \' + context.toCamel(entityName) + \'Service.list(this.searchForm, this.pager).then(resp => {\\r\\n\' +\n  \'        this.pager.totalCount = resp.totalCount\\r\\n\' +\n  \'        this.data.list = resp.\' + context.toCamel(entityName) + \'s\\r\\n\' +\n  \'      })\\r\\n\' +\n  \'    },\\r\\n\' +\n  \'    pagerChange() {\\r\\n\' +\n  \'      this.loadData()\\r\\n\' +\n  \'    }\\r\\n\' +\n  \'  }\\r\\n\' +\n  \'}\\r\\n\' +\n  \'</script>\\r\\n\\r\\n\' +\n  \'<style lang=\"scss\" scoped>\\r\\n\\r\\n\' +\n  \'</style>\\r\\n\'\n\n  return indexVueTemplate + scriptTemplate\n}\n\nfunction createColumns(context) {\n  var columnsArr = []\n\n  context.dictColumns.forEach((item, index) => {\n    if (index === 0) {\n      columnsArr.push(\'{name: \\\'\' + item.propertyName + \'\\\', text: \\\'\' + item.displayName + \'\\\', width: 100}\')\n    } else {\n      columnsArr.push(\'        {name: \\\'\' + item.propertyName + \'\\\', text: \\\'\' + item.displayName + \'\\\', width: 100}\')\n    }\n  })\n\n  return \'columns: [\' + columnsArr.join(\',\\r\\n\') + \']\'\n}', '02', 'html', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '6c1b188d-9f11-4821-9e6a-31519e6f2dec', '110-MySql', null, '\nbuildSuccess(createMySql(context))\n\nfunction createMySql(context) {\n  const tableName = context.dictTable.name\n  var result = []\n  var key = \'\'\n  console.log(context.dictColumns, \'context.dictColumns\')\n  result.push(\'create table \' + tableName + \' (\')\n  context.dictColumns.forEach((item, index) => {\n    let columnInfo = \'\\t\' + item.columnName + \' \'\n    columnInfo += item.dataType\n    if (item.dataType === \'int\') {\n      columnInfo += \'(11)\'\n    } else if (item.dataType === \'datetime\' || item.dataType === \'date\' || item.dataType === \'double\') {\n      columnInfo += \' \'\n    } else {\n      columnInfo += \'(\' + item.dataLength + \')\'\n    }\n    if (item.notNull === \'1\') {\n      columnInfo += \' NOT NULL\'\n    } else {\n      columnInfo += \' NULL\'\n    }\n    if (item.isKey === \'1\') {\n      key = item.columnName\n    }\n    console.log(\'item\', item)\n    columnInfo += \' COMMENT \\\'\' + item.displayName + \'\\\',\'\n    console.log(\'columnInfo\', columnInfo)\n    result.push(columnInfo)\n  })\n  result.push(\'\\tPRIMARY KEY (\' + key + \')\')\n  result.push(\') ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT;\')\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}\n\n', '02', 'sql', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '7d30aaa5-920e-44d0-b7a6-e0cea11f2219', '106-ServiceImpl', null, '\nbuildSuccess(createServiceImplCode(context))\n\nfunction createServiceImplCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = []\n  result.push(\'package \' + packageName + \'.service.impl;\\r\\n\')\n  result.push(\'import org.springframework.stereotype.Component;\')\n  result.push(\'import org.springframework.beans.factory.annotation.Autowired;\')\n  result.push(\'import com.tennetcn.free.data.dao.base.impl.SuperService;\')\n  result.push(\'import \' + packageName + \'.model.\' + entityName + \';\')\n  result.push(\'import \' + packageName + \'.service.I\' + entityName + \'Service;\')\n  result.push(\'import \' + packageName + \'.dao.I\' + entityName + \'Dao;\')\n  result.push(\'import \' + packageName + \'.viewmodel.\' + entityName + \'Search;\')\n  result.push(\'import com.tennetcn.free.core.message.data.PagerModel;\')\n  result.push(\'import java.util.List;\\r\\n\')\n  result.push(context.appendAuthor(displayName))\n  result.push(\'\\r\\n@Component\')\n  result.push(\'public class \' + entityName + \'ServiceImpl extends SuperService<\' + entityName + \'> implements I\' + entityName + \'Service{\')\n  result.push(\'\\t@Autowired\')\n  result.push(\'\\tI\' + entityName + \'Dao \' + context.toCamel(entityName) + \'Dao;\\r\\n\')\n  result.push(\'\\t@Override\')\n  result.push(\'\\tpublic int queryCountBySearch(\' + entityName + \'Search search) {\')\n  result.push(\'\\t\\treturn \' + context.toCamel(entityName) + \'Dao.queryCountBySearch(search);\')\n  result.push(\'\\t}\\r\\n\')\n  result.push(\'\\t@Override\')\n  result.push(\'\\tpublic List<\' + entityName + \'> queryListBySearch(\' + entityName + \'Search search, PagerModel pagerModel) {\')\n  result.push(\'\\t\\treturn \' + context.toCamel(entityName) + \'Dao.queryListBySearch(search,pagerModel);\')\n  result.push(\'\\t}\\r\\n\')\n\n  result.push(\'}\')\n\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '888c8363-4440-4ac1-8c91-51318c670b24', '101-Model', null, 'buildSuccess(createCode(context))\nconsole.log(context)\nfunction createCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const tableName = context.dictTable.name\n  const displayName = context.dictTable.displayName\n\n  var result = \'package \' + packageName + \'.model;\\r\\n\'\n  if (context.dictColumns.some(item => item.dataType.indexOf(\'date\') >= 0)) {\n    result += \'\\r\\nimport java.util.Date;\'\n  }\n  result += \'\\r\\nimport javax.persistence.Column;\'\n  result += \'\\r\\nimport javax.persistence.Id;\'\n  result += \'\\r\\nimport javax.persistence.Table;\'\n  result += \'\\r\\nimport javax.persistence.Entity;\'\n  result += \'\\r\\nimport lombok.Data;\'\n  result += \'\\r\\nimport com.tennetcn.free.core.message.data.ModelBase;\\r\\n\'\n\n  result += context.appendAuthor(displayName)\n\n  result += \'\\r\\n\\r\\n@Data\'\n  result += \'\\r\\n@Entity\'\n  result += \'\\r\\n@Table(name=\"\' + tableName + \'\")\'\n  result += \'\\r\\npublic class \' + entityName + \' extends ModelBase{\'\n\n  var modelField = \'\'\n  var modelProperty = \'\'\n\n  context.dictColumns.forEach((item, index) => {\n    var dictColumn = item\n\n    modelField += \'\\r\\n\\t/**\'\n    modelField += \'\\r\\n\\t * \' + dictColumn.displayName\n    modelField += \'\\r\\n\\t */\'\n    if (dictColumn.isKey === \'1\') {\n      modelField += \'\\r\\n\\t@Id\'\n    }\n    modelField += \'\\r\\n\\t@Column(name=\"\' + dictColumn.columnName + \'\")\'\n    modelField += \'\\r\\n\\tprivate \' + context.convert2Java(dictColumn.dataType) + \' \' + dictColumn.propertyName + \';\\r\\n\'\n  })\n\n  result += modelField\n  result += modelProperty\n\n  result += \'\\r\\n}\'\n\n  return result.replace(/\\t/g, \'    \')\n}', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '906108e2-9eab-4c1e-b09d-52c8b9a07985', '115-SaveReq', null, '\nbuildSuccess(createSaveReqCode(context))\n\nfunction createSaveReqCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = []\n  result.push(\'package com.tennetcn.xxxx.web.apimodel.\' + entityName.toLowerCase() + \';\\r\\n\')\n  result.push(\'import \' + packageName + \'.model.\' + entityName + \';\')\n  result.push(\'import lombok.Data;\')\n  result.push(context.appendAuthor(displayName))\n  result.push(\'\\r\\n@Data\')\n  result.push(\'public class Save\' + entityName + \'Req extends \' + entityName + \' {\')\n  result.push(\'}\')\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}\n\n', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '915f7259-3576-40ba-9625-8f7a5b417100', '109-MapperProperty', null, '\nbuildSuccess(createXmlProCode(context))\n\nfunction createXmlProCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var createMapperXml = \'\'\n\n  createMapperXml += \'\\r\\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\'\n  createMapperXml += \'\\r\\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\'\n  createMapperXml += \'\\r\\n<mapper namespace=\"\' + packageName + \'.mapper.I\' + entityName + \'Mapper\">\'\n  createMapperXml += \'\\r\\n\\t<!-- \' + displayName + \'Mapper -->\'\n  createMapperXml += \'\\r\\n\\t<resultMap type=\"\' + context.toCamel(entityName) + \'\" id=\"\' + context.toCamel(entityName) + \'Map\">\'\n\n  context.dictColumns.forEach((item, index) => {\n    var dictColumn = item\n    if (dictColumn.isKey === \'1\') {\n      createMapperXml += \'\\r\\n\\t\\t<id column=\"\' + dictColumn.columnName + \'\" property=\"\' + dictColumn.propertyName + \'\"/>\\t<!-- \' + dictColumn.displayName + \' -->\'\n    } else {\n      createMapperXml += \'\\r\\n\\t\\t<result column=\"\' + dictColumn.columnName + \'\" property=\"\' + dictColumn.propertyName + \'\"/>\\t<!-- \' + dictColumn.displayName + \' -->\'\n    }\n  })\n  createMapperXml += \'\\r\\n\\t</resultMap>\'\n  createMapperXml += \'\\r\\n</mapper>\'\n  createMapperXml = createMapperXml.replace(/\\t/g, \'    \')\n  return createMapperXml\n}\n\n', '02', 'xml', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( '9a5daa76-3c06-4bbd-a7be-59e3e9eb21ac', '112-Api', null, '\nbuildSuccess(createApiCode(context))\n\nfunction createApiCode(context) {\n  const entityName = context.dictTable.entityName\n  const displayName = context.dictTable.displayName\n  const packageName = context.dictTable.packageName\n\n  var result = []\n  result.push(\'package com.tennetcn.xxxx.web.apis;\\r\\n\')\n\n  result.push(\'import com.tennetcn.free.core.util.PkIdUtils;\')\n  result.push(\'import com.tennetcn.free.core.enums.ModelStatus;\')\n  result.push(\'import com.tennetcn.xxxx.web.apimodel.\' + entityName.toLowerCase() + \'.\' + entityName + \'ListReq;\')\n  result.push(\'import com.tennetcn.xxxx.web.apimodel.\' + entityName.toLowerCase() + \'.\' + entityName + \'ListResp;\')\n  result.push(\'import com.tennetcn.xxxx.web.apimodel.\' + entityName.toLowerCase() + \'.Save\' + entityName + \'Req;\')\n  result.push(\'import \' + packageName + \'.viewmodel.\' + entityName + \'Search;\')\n  result.push(\'import \' + packageName + \'.model.\' + entityName + \';\')\n  result.push(\'import \' + packageName + \'.service.I\' + entityName + \'Service;\')\n  result.push(\'import com.tennetcn.free.security.webapi.AuthorityApi;\')\n  result.push(\'import com.tennetcn.free.core.message.web.BaseResponse;\')\n  result.push(\'import io.swagger.annotations.Api;\')\n  result.push(\'import io.swagger.annotations.ApiOperation;\')\n  result.push(\'import org.springframework.beans.factory.annotation.Autowired;\')\n  result.push(\'import org.springframework.util.StringUtils;\')\n  result.push(\'import org.springframework.http.MediaType;\')\n  result.push(\'import org.springframework.web.bind.annotation.*;\\r\\n\')\n  result.push(\'import javax.validation.Valid;\')\n  result.push(\'import javax.validation.constraints.NotBlank;\\r\\n\')\n  result.push(context.appendAuthor(displayName))\n  result.push(\'@RestController\')\n  result.push(\'@RequestMapping(value = \"/api/v1/xxxx/\' + context.toCamel(entityName) + \'/\",produces =  MediaType.APPLICATION_JSON_UTF8_VALUE)\')\n  result.push(\'@Api(tags=\"\' + displayName + \'ÁÆ°ÁêÜ\",value =\"\' + displayName + \'Áõ∏ÂÖ≥ÁöÑÊìç‰Ωú\")\')\n  result.push(\'public class \' + entityName + \'Api extends AuthorityApi {\')\n  result.push(\'\\t@Autowired\')\n  result.push(\'\\tI\' + entityName + \'Service \' + context.toCamel(entityName) + \'Service;\\r\\n\')\n  result.push(\'\\t@ApiOperation(value = \"Ëé∑Âèñ\' + displayName + \'ÂàóË°®\")\')\n  result.push(\'\\t@PostMapping(\"list\")\')\n  result.push(\'\\tpublic BaseResponse list(@RequestBody @Valid \' + entityName + \'ListReq listReq){\')\n  result.push(\'\\t\\t\' + entityName + \'ListResp resp = new \' + entityName + \'ListResp();\')\n  result.push(\'\\t\\tresp.setTotalCount(\' + context.toCamel(entityName) + \'Service.queryCountBySearch(listReq.getSearch()));\')\n  result.push(\'\\t\\tresp.set\' + entityName + \'s(\' + context.toCamel(entityName) + \'Service.queryListBySearch(listReq.getSearch(),listReq.getPager()));\\r\\n\')\n  result.push(\'\\t\\treturn resp;\')\n  result.push(\'\\t}\\r\\n\')\n\n  result.push(\'\\t@ApiOperation(value = \"Ëé∑ÂèñÊåáÂÆö\' + displayName + \'\")\')\n  result.push(\'\\t@GetMapping(\"get\")\')\n  result.push(\'\\tpublic BaseResponse get(@Valid @NotBlank(message = \"\' + displayName + \'id‰∏çËÉΩ‰∏∫Á©∫\") String id){\')\n  result.push(\'\\t\\tBaseResponse response=new BaseResponse();\\r\\n\')\n  result.push(\'\\t\\t\' + entityName + \' \' + context.toCamel(entityName) + \' = \' + context.toCamel(entityName) + \'Service.queryModel(id);\')\n  result.push(\'\\t\\tresponse.put(\"\' + context.toCamel(entityName) + \'\",\' + context.toCamel(entityName) + \');\\r\\n\')\n  result.push(\'\\t\\treturn response;\')\n  result.push(\'\\t}\\r\\n\')\n\n  result.push(\'\\t@ApiOperation(value = \"ÊêúÁ¥¢\' + displayName + \'Êï∞Èáè\")\')\n  result.push(\'\\t@PostMapping(\"countSearch\")\')\n  result.push(\'\\tpublic BaseResponse countSearch(\' + entityName + \'Search search){\')\n  result.push(\'\\t\\tBaseResponse response=new BaseResponse();\\r\\n\')\n  result.push(\'\\t\\tint count =  \' + context.toCamel(entityName) + \'Service.queryCountBySearch(search);\')\n  result.push(\'\\t\\tresponse.put(\"count\",count);\\r\\n\')\n  result.push(\'\\t\\treturn response;\')\n  result.push(\'\\t}\\r\\n\')\n\n  result.push(\'\\t@ApiOperation(value = \"Âà†Èô§‰∏Ä‰∏™\' + displayName + \'\")\')\n  result.push(\'\\t@PostMapping(\"delete\")\')\n  result.push(\'\\tpublic BaseResponse delete(@Valid @NotBlank(message = \"\' + displayName + \'id‰∏çËÉΩ‰∏∫Á©∫\")String id){\')\n  result.push(\'\\t\\tBaseResponse response=new BaseResponse();\\r\\n\')\n  result.push(\'\\t\\tboolean result =  \' + context.toCamel(entityName) + \'Service.deleteModel(id);\')\n  result.push(\'\\t\\tresponse.put(\"result\",result);\\r\\n\')\n  result.push(\'\\t\\treturn response;\')\n  result.push(\'\\t}\\r\\n\')\n\n  result.push(\'\\t@ApiOperation(value = \"‰øùÂ≠ò‰∏Ä‰∏™\' + displayName + \'\")\')\n  result.push(\'\\t@PostMapping(\"save\")\')\n  result.push(\'\\tpublic BaseResponse save(@Valid Save\' + entityName + \'Req save\' + entityName + \'Req){\')\n  result.push(\'\\t\\tBaseResponse response = new BaseResponse();\')\n  result.push(\'\\t\\tif(StringUtils.isEmpty(save\' + entityName + \'Req.getId())){\')\n  result.push(\'\\t\\t\\tsave\' + entityName + \'Req.setId(PkIdUtils.getId());\')\n  result.push(\'\\t\\t\\tsave\' + entityName + \'Req.setModelStatus(ModelStatus.add);\')\n  result.push(\'\\t\\t}else{\')\n  result.push(\'\\t\\t\\tsave\' + entityName + \'Req.setModelStatus(ModelStatus.update);\')\n  result.push(\'\\t\\t}\\r\\n\')\n  result.push(\'\\t\\tboolean result = \' + context.toCamel(entityName) + \'Service.applyChange(save\' + entityName + \'Req);\')\n  result.push(\'\\t\\tresponse.put(\"result\",result);\')\n  result.push(\'\\t\\treturn response;\')\n  result.push(\'\\t}\\r\\n\')\n\n  result.push(\'}\')\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}\n\n', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( 'd2203bac-7aa5-442d-a8c3-48aa9c75f991', '108-MapperXml', null, '\nbuildSuccess(createXmlCode(context))\n\nfunction createXmlCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const tableName = context.dictTable.name\n  const displayName = context.dictTable.displayName\n\n  var createMapperXml = \'\'\n\n  createMapperXml += \'\\r\\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\'\n  createMapperXml += \'\\r\\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\'\n  createMapperXml += \'\\r\\n<mapper namespace=\"\' + packageName + \'.mapper.I\' + entityName + \'Mapper\">\'\n  createMapperXml += \'\\r\\n\\t<!-- \' + displayName + \'Mapper -->\'\n\n  createMapperXml += \'\\r\\n\\t<sql id=\"tableName\">\' + tableName + \' \' + context.toCamel(entityName) + \'</sql>\'\n  createMapperXml += \'\\r\\n\\t<sql id=\"mainTableAlias\"> \' + context.toCamel(entityName) + \'.</sql>\\r\\n\'\n  createMapperXml += \'\\r\\n\\t<sql id=\"allColumns\"> \' + createColumnNames(context) + \' </sql>\\r\\n\'\n\n  createMapperXml += \'\\r\\n\\t<select id=\"queryCountMP\" resultType=\"int\">\'\n  createMapperXml += \'\\r\\n\\t\\tselect count(1) from \'\n  createMapperXml += \'\\r\\n\\t\\t<include refid=\"tableName\"/>\'\n  createMapperXml += \'\\r\\n\\t</select>\\r\\n\'\n  createMapperXml += \'\\r\\n\\t<select id=\"queryListMP\" resultMap=\"\' + context.toCamel(entityName) + \'Map\">\'\n  createMapperXml += \'\\r\\n\\t\\tselect\'\n  createMapperXml += \'\\r\\n\\t\\t<include refid=\"allColumns\"/>\'\n  createMapperXml += \'\\r\\n\\t\\tfrom \'\n  createMapperXml += \'\\r\\n\\t\\t<include refid=\"tableName\"/>\'\n  createMapperXml += \'\\r\\n\\t</select>\\r\\n\'\n  createMapperXml += \'\\r\\n</mapper>\'\n\n  createMapperXml = createMapperXml.replace(/\\t/g, \'    \')\n\n  return createMapperXml\n}\n\nfunction createColumnNames(context) {\n  var columnsArr = []\n  const entityName = context.toCamel(context.dictTable.entityName)\n  context.dictColumns.forEach((item, index) => {\n    columnsArr.push(entityName + \'.\' + item.columnName)\n  })\n  return columnsArr.join(\',\')\n}\n', '02', 'xml', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( 'd68fa894-e6a2-449f-8c48-9c945a488271', '111-Oracle', null, '\nbuildSuccess(createOracle(context))\n\nfunction createOracle(context) {\n  return \'\'\n}\n\n', '02', 'sql', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( 'e15d37b1-89ad-48da-9393-2b6b73ef1abc', '117-ApiVue', null, '\nbuildSuccess(createApiVueCode(context))\n\nfunction createApiVueCode(context) {\n  const entityName = context.dictTable.entityName\n  const indexVueTemplate =\n  \'import request from \\\'@/components/util/http/request\\\'\\r\\n\' +\n  \'import apiBase from \\\'@/api/api-base\\\'\\r\\n\\r\\n\' +\n\n  \'const bizClz = \\\'\' + context.toCamel(entityName) + \'\\\'\\r\\n\' +\n  \'const prefix = apiBase.xxxxPrefix + \\\'/\\\' + bizClz + \\\'/\\\'\\r\\n\' +\n  \'const apiPath = {\\r\\n\' +\n  \'  list: prefix + \\\'list\\\',\\r\\n\' +\n  \'  save: prefix + \\\'save\\\',\\r\\n\' +\n  \'  get: prefix + \\\'get\\\',\\r\\n\' +\n  \'  delete: prefix + \\\'delete\\\',\\r\\n\' +\n  \'  countSearch: prefix + \\\'countSearch\\\'\\r\\n\' +\n  \'}\\r\\n\\r\\n\' +\n\n  \'function list(search, pager) {\\r\\n\' +\n  \'  return new Promise(function(resolve, reject) {\\r\\n\' +\n  \'    request.postJson(apiPath.list, {pager: pager, search: search}, response => {\\r\\n\' +\n  \'      resolve(response.data)\\r\\n\' +\n  \'    })\\r\\n\' +\n  \'  })\\r\\n\' +\n  \'}\\r\\n\\r\\n\' +\n\n  \'function save(saveData) {\\r\\n\' +\n  \'  return new Promise(function(resolve, reject) {\\r\\n\' +\n  \'    request.post(apiPath.save, saveData, response => {\\r\\n\' +\n  \'      resolve(response.data)\\r\\n\' +\n  \'    })\\r\\n\' +\n  \'  })\\r\\n\' +\n  \'}\\r\\n\\r\\n\' +\n\n  \'function get(id) {\\r\\n\' +\n  \'  return new Promise(function(resolve, reject) {\\r\\n\' +\n  \'    request.get(apiPath.get, {id: id}, response => {\\r\\n\' +\n  \'      resolve(response.data)\\r\\n\' +\n  \'    })\\r\\n\' +\n  \'  })\\r\\n\' +\n  \'}\\r\\n\\r\\n\' +\n\n  \'function countSearch(search) {\\r\\n\' +\n  \'  return new Promise(function(resolve, reject) {\\r\\n\' +\n  \'    request.post(apiPath.countSearch, search, response => {\\r\\n\' +\n  \'      resolve(response.data)\\r\\n\' +\n  \'    })\\r\\n\' +\n  \'  })\\r\\n\' +\n  \'}\\r\\n\\r\\n\' +\n\n  \'function deleteData(id) {\\r\\n\' +\n  \'  return new Promise(function(resolve, reject) {\\r\\n\' +\n  \'    request.post(apiPath.delete, {id}, response => {\\r\\n\' +\n  \'      resolve(response.data)\\r\\n\' +\n  \'    })\\r\\n\' +\n  \'  })\\r\\n\' +\n  \'}\\r\\n\\r\\n\' +\n\n  \'const \' + context.toCamel(entityName) + \'Service = {\\r\\n\' +\n  \'  apiPath,\\r\\n\' +\n  \'  list,\\r\\n\' +\n  \'  save,\\r\\n\' +\n  \'  get,\\r\\n\' +\n  \'  delete: deleteData,\\r\\n\' +\n  \'  countSearch\\r\\n\' +\n  \'}\\r\\n\\r\\n\' +\n\n  \'export default \' + context.toCamel(entityName) + \'Service\\r\\n\'\n\n  return indexVueTemplate\n}', '02', 'js', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');
insert into base_develop_code_tmp( 'id', 'name', 'comment', 'content', 'pub', 'type', 'group_name', 'create_user_id', 'create_user_name') values ( 'f9ef3230-e372-408d-9944-c3782ec4713a', '105-Service', null, '\nbuildSuccess(createServiceCode(context))\n\nfunction createServiceCode(context) {\n  const entityName = context.dictTable.entityName\n  const packageName = context.dictTable.packageName\n  const displayName = context.dictTable.displayName\n\n  var result = []\n  result.push(\'package \' + packageName + \'.service;\\r\\n\')\n  result.push(\'import com.tennetcn.free.data.dao.base.ISuperService;\')\n  result.push(\'import com.tennetcn.free.core.message.data.PagerModel;\')\n  result.push(\'import \' + packageName + \'.viewmodel.\' + entityName + \'Search;\')\n  result.push(\'import \' + packageName + \'.model.\' + entityName + \';\')\n  result.push(\'import java.util.List;\\r\\n\')\n\n  result.push(context.appendAuthor(displayName))\n\n  result.push(\'\\r\\npublic interface I\' + entityName + \'Service extends ISuperService<\' + entityName + \'>{\')\n  result.push(\'\\tint queryCountBySearch(\' + entityName + \'Search search);\\r\\n\')\n  result.push(\'\\tList<\' + entityName + \'> queryListBySearch(\' + entityName + \'Search search, PagerModel pagerModel);\')\n  result.push(\'}\')\n\n  return result.join(\'\\r\\n\').replace(/\\t/g, \'    \')\n}', '02', 'java', 'cheng-pub', '04a2fdf1-e255-4b0d-a38c-f5d7b9c67479', 'Á®ãÊ¨¢üòÅ');